Terminals unused in grammar

    "eof"
    T_divider
    T_operator
    '/'
    '%'


State 70 conflicts: 1 shift/reduce
State 75 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 79 conflicts: 2 shift/reduce
State 109 conflicts: 5 shift/reduce
State 110 conflicts: 5 shift/reduce
State 117 conflicts: 2 shift/reduce
State 118 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 2 shift/reduce
State 121 conflicts: 2 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 ld: ε
    3   | ld local_def

    4 func_def: header ld block

    5 header: "fun" T_id '(' fd ')' ':' ret_type
    6       | "fun" T_id '(' ')' ':' ret_type

    7 fd: fpar_def
    8   | fd ';' fpar_def

    9 fpar_def: "ref" T_id td ':' fpar_type
   10         | T_id td ':' fpar_type

   11 td: ε
   12   | td ',' T_id

   13 data_type: "int"
   14          | "char"

   15 cd: ε
   16   | cd '[' T_int_const ']'

   17 type: data_type cd

   18 ret_type: data_type
   19         | "nothing"

   20 fpar_type: data_type '[' ']' cd
   21          | data_type cd

   22 local_def: func_def
   23          | var_def

   24 var_def: "var" T_id td ':' type ';'

   25 stmt: ';'
   26     | l_value "<-" expr ';'
   27     | block
   28     | func_call ';'
   29     | "if" cond "then" stmt "else" stmt
   30     | "if" cond "then" stmt
   31     | "while" cond "do" stmt
   32     | "return" expr ';'
   33     | "return" ';'

   34 stmtd: ε
   35      | stmtd stmt

   36 block: '{' stmtd '}'

   37 exprc: expr
   38      | exprc ',' expr

   39 func_call: T_id '(' exprc ')'
   40          | T_id '(' ')'

   41 l_value: T_id
   42        | T_string_const
   43        | l_value '[' expr ']'

   44 expr: T_int_const
   45     | T_char_const
   46     | l_value
   47     | '(' expr ')'
   48     | func_call
   49     | '+' expr
   50     | '-' expr
   51     | expr '+' expr
   52     | expr '-' expr
   53     | expr '*' expr
   54     | expr "div" expr
   55     | expr "mod" expr

   56 cond: '(' cond ')'
   57     | "not" cond
   58     | cond "or" cond
   59     | cond "and" cond
   60     | expr '=' expr
   61     | expr '#' expr
   62     | expr '<' expr
   63     | expr '>' expr
   64     | expr "<=" expr
   65     | expr ">=" expr


Terminals, with rules where they appear

    $end (0) 0
    '#' <op> (35) 61
    '%' <op> (37)
    '(' <div> (40) 5 6 39 40 47 56
    ')' <div> (41) 5 6 39 40 47 56
    '*' <op> (42) 53
    '+' <op> (43) 49 51
    ',' <div> (44) 12 38
    '-' <op> (45) 50 52
    '/' <op> (47)
    ':' <div> (58) 5 6 9 10 24
    ';' <div> (59) 8 24 25 26 28 32 33
    '<' <op> (60) 62
    '=' <op> (61) 60
    '>' <op> (62) 63
    '[' <div> (91) 16 20 43
    ']' <div> (93) 16 20 43
    '{' <div> (123) 36
    '}' <div> (125) 36
    error (256)
    "eof" (258)
    "and" <op_s> (259) 59
    "char" <def> (260) 14
    "div" <op_s> (261) 54
    "do" <def> (262) 31
    "else" <def> (263) 29
    "fun" <def> (264) 5 6
    "if" <def> (265) 29 30
    "int" <def> (266) 13
    "mod" <op_s> (267) 55
    "not" <op_s> (268) 57
    "nothing" <def> (269) 19
    "or" <op_s> (270) 58
    "ref" <def> (271) 9
    "return" <def> (272) 32 33
    "then" <def> (273) 29 30
    "var" <def> (274) 24
    "while" <def> (275) 31
    "<=" <op_s> (276) 64
    ">=" <op_s> (277) 65
    "<-" <op_s> (278) 26
    T_int_const <num> (279) 16 44
    T_char_const <var> (280) 45
    T_id <id> (281) 5 6 9 10 12 24 39 40 41
    T_string_const <str> (282) 42
    T_divider <div> (283)
    T_operator <op> (284)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    ld <deflist> (50)
        on left: 2 3
        on right: 3 4
    func_def <function> (51)
        on left: 4
        on right: 1 22
    header <header> (52)
        on left: 5 6
        on right: 4
    fd <fpar_list> (53)
        on left: 7 8
        on right: 5 8
    fpar_def <fpar_def> (54)
        on left: 9 10
        on right: 7 8
    td <id_list> (55)
        on left: 11 12
        on right: 9 10 12 24
    data_type <dtype> (56)
        on left: 13 14
        on right: 17 18 20 21
    cd <dlist> (57)
        on left: 15 16
        on right: 16 17 20 21
    type <type> (58)
        on left: 17
        on right: 24
    ret_type <dtype> (59)
        on left: 18 19
        on right: 5 6
    fpar_type <type> (60)
        on left: 20 21
        on right: 9 10
    local_def <local_def> (61)
        on left: 22 23
        on right: 3
    var_def <var_def> (62)
        on left: 24
        on right: 23
    stmt <stmt> (63)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 29 30 31 35
    stmtd <blk> (64)
        on left: 34 35
        on right: 35 36
    block <blk> (65)
        on left: 36
        on right: 4 27
    exprc <exprc> (66)
        on left: 37 38
        on right: 38 39
    func_call <func_call> (67)
        on left: 39 40
        on right: 28 48
    l_value <l_value> (68)
        on left: 41 42 43
        on right: 26 43 46
    expr <expr> (69)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 26 32 37 38 43 47 49 50 51 52 53 54 55 60 61 62 63 64 65
    cond <cond> (70)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 29 30 31 56 57 58 59


State 0

    0 $accept: • program $end

    "fun"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3
    header    go to state 4


State 1

    5 header: "fun" • T_id '(' fd ')' ':' ret_type
    6       | "fun" • T_id '(' ')' ':' ret_type

    T_id  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: func_def •

    $default  reduce using rule 1 (program)


State 4

    4 func_def: header • ld block

    $default  reduce using rule 2 (ld)

    ld  go to state 7


State 5

    5 header: "fun" T_id • '(' fd ')' ':' ret_type
    6       | "fun" T_id • '(' ')' ':' ret_type

    '('  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 ld: ld • local_def
    4 func_def: header ld • block

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 9
    '{'    shift, and go to state 10

    func_def   go to state 11
    header     go to state 4
    local_def  go to state 12
    var_def    go to state 13
    block      go to state 14


State 8

    5 header: "fun" T_id '(' • fd ')' ':' ret_type
    6       | "fun" T_id '(' • ')' ':' ret_type

    "ref"  shift, and go to state 15
    T_id   shift, and go to state 16
    ')'    shift, and go to state 17

    fd        go to state 18
    fpar_def  go to state 19


State 9

   24 var_def: "var" • T_id td ':' type ';'

    T_id  shift, and go to state 20


State 10

   36 block: '{' • stmtd '}'

    $default  reduce using rule 34 (stmtd)

    stmtd  go to state 21


State 11

   22 local_def: func_def •

    $default  reduce using rule 22 (local_def)


State 12

    3 ld: ld local_def •

    $default  reduce using rule 3 (ld)


State 13

   23 local_def: var_def •

    $default  reduce using rule 23 (local_def)


State 14

    4 func_def: header ld block •

    $default  reduce using rule 4 (func_def)


State 15

    9 fpar_def: "ref" • T_id td ':' fpar_type

    T_id  shift, and go to state 22


State 16

   10 fpar_def: T_id • td ':' fpar_type

    $default  reduce using rule 11 (td)

    td  go to state 23


State 17

    6 header: "fun" T_id '(' ')' • ':' ret_type

    ':'  shift, and go to state 24


State 18

    5 header: "fun" T_id '(' fd • ')' ':' ret_type
    8 fd: fd • ';' fpar_def

    ')'  shift, and go to state 25
    ';'  shift, and go to state 26


State 19

    7 fd: fpar_def •

    $default  reduce using rule 7 (fd)


State 20

   24 var_def: "var" T_id • td ':' type ';'

    $default  reduce using rule 11 (td)

    td  go to state 27


State 21

   35 stmtd: stmtd • stmt
   36 block: '{' stmtd • '}'

    "if"            shift, and go to state 28
    "return"        shift, and go to state 29
    "while"         shift, and go to state 30
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '{'             shift, and go to state 10
    '}'             shift, and go to state 33
    ';'             shift, and go to state 34

    stmt       go to state 35
    block      go to state 36
    func_call  go to state 37
    l_value    go to state 38


State 22

    9 fpar_def: "ref" T_id • td ':' fpar_type

    $default  reduce using rule 11 (td)

    td  go to state 39


State 23

   10 fpar_def: T_id td • ':' fpar_type
   12 td: td • ',' T_id

    ','  shift, and go to state 40
    ':'  shift, and go to state 41


State 24

    6 header: "fun" T_id '(' ')' ':' • ret_type

    "char"     shift, and go to state 42
    "int"      shift, and go to state 43
    "nothing"  shift, and go to state 44

    data_type  go to state 45
    ret_type   go to state 46


State 25

    5 header: "fun" T_id '(' fd ')' • ':' ret_type

    ':'  shift, and go to state 47


State 26

    8 fd: fd ';' • fpar_def

    "ref"  shift, and go to state 15
    T_id   shift, and go to state 16

    fpar_def  go to state 48


State 27

   12 td: td • ',' T_id
   24 var_def: "var" T_id td • ':' type ';'

    ','  shift, and go to state 40
    ':'  shift, and go to state 49


State 28

   29 stmt: "if" • cond "then" stmt "else" stmt
   30     | "if" • cond "then" stmt

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 58
    cond       go to state 59


State 29

   32 stmt: "return" • expr ';'
   33     | "return" • ';'

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    ';'             shift, and go to state 61
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 62


State 30

   31 stmt: "while" • cond "do" stmt

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 58
    cond       go to state 63


State 31

   39 func_call: T_id • '(' exprc ')'
   40          | T_id • '(' ')'
   41 l_value: T_id •

    '('  shift, and go to state 64

    $default  reduce using rule 41 (l_value)


State 32

   42 l_value: T_string_const •

    $default  reduce using rule 42 (l_value)


State 33

   36 block: '{' stmtd '}' •

    $default  reduce using rule 36 (block)


State 34

   25 stmt: ';' •

    $default  reduce using rule 25 (stmt)


State 35

   35 stmtd: stmtd stmt •

    $default  reduce using rule 35 (stmtd)


State 36

   27 stmt: block •

    $default  reduce using rule 27 (stmt)


State 37

   28 stmt: func_call • ';'

    ';'  shift, and go to state 65


State 38

   26 stmt: l_value • "<-" expr ';'
   43 l_value: l_value • '[' expr ']'

    "<-"  shift, and go to state 66
    '['   shift, and go to state 67


State 39

    9 fpar_def: "ref" T_id td • ':' fpar_type
   12 td: td • ',' T_id

    ','  shift, and go to state 40
    ':'  shift, and go to state 68


State 40

   12 td: td ',' • T_id

    T_id  shift, and go to state 69


State 41

   10 fpar_def: T_id td ':' • fpar_type

    "char"  shift, and go to state 42
    "int"   shift, and go to state 43

    data_type  go to state 70
    fpar_type  go to state 71


State 42

   14 data_type: "char" •

    $default  reduce using rule 14 (data_type)


State 43

   13 data_type: "int" •

    $default  reduce using rule 13 (data_type)


State 44

   19 ret_type: "nothing" •

    $default  reduce using rule 19 (ret_type)


State 45

   18 ret_type: data_type •

    $default  reduce using rule 18 (ret_type)


State 46

    6 header: "fun" T_id '(' ')' ':' ret_type •

    $default  reduce using rule 6 (header)


State 47

    5 header: "fun" T_id '(' fd ')' ':' • ret_type

    "char"     shift, and go to state 42
    "int"      shift, and go to state 43
    "nothing"  shift, and go to state 44

    data_type  go to state 45
    ret_type   go to state 72


State 48

    8 fd: fd ';' fpar_def •

    $default  reduce using rule 8 (fd)


State 49

   24 var_def: "var" T_id td ':' • type ';'

    "char"  shift, and go to state 42
    "int"   shift, and go to state 43

    data_type  go to state 73
    type       go to state 74


State 50

   57 cond: "not" • cond

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 58
    cond       go to state 75


State 51

   44 expr: T_int_const •

    $default  reduce using rule 44 (expr)


State 52

   45 expr: T_char_const •

    $default  reduce using rule 45 (expr)


State 53

   47 expr: '(' • expr ')'
   56 cond: '(' • cond ')'

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 76
    cond       go to state 77


State 54

   49 expr: '+' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 78


State 55

   50 expr: '-' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 79


State 56

   48 expr: func_call •

    $default  reduce using rule 48 (expr)


State 57

   43 l_value: l_value • '[' expr ']'
   46 expr: l_value •

    '['  shift, and go to state 67

    $default  reduce using rule 46 (expr)


State 58

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   60 cond: expr • '=' expr
   61     | expr • '#' expr
   62     | expr • '<' expr
   63     | expr • '>' expr
   64     | expr • "<=" expr
   65     | expr • ">=" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '#'    shift, and go to state 86
    '='    shift, and go to state 87
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 59

   29 stmt: "if" cond • "then" stmt "else" stmt
   30     | "if" cond • "then" stmt
   58 cond: cond • "or" cond
   59     | cond • "and" cond

    "and"   shift, and go to state 91
    "or"    shift, and go to state 92
    "then"  shift, and go to state 93


State 60

   47 expr: '(' • expr ')'

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 94


State 61

   33 stmt: "return" ';' •

    $default  reduce using rule 33 (stmt)


State 62

   32 stmt: "return" expr • ';'
   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    ';'    shift, and go to state 95
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 63

   31 stmt: "while" cond • "do" stmt
   58 cond: cond • "or" cond
   59     | cond • "and" cond

    "and"  shift, and go to state 91
    "do"   shift, and go to state 96
    "or"   shift, and go to state 92


State 64

   39 func_call: T_id '(' • exprc ')'
   40          | T_id '(' • ')'

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    ')'             shift, and go to state 97
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    exprc      go to state 98
    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 99


State 65

   28 stmt: func_call ';' •

    $default  reduce using rule 28 (stmt)


State 66

   26 stmt: l_value "<-" • expr ';'

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 100


State 67

   43 l_value: l_value '[' • expr ']'

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 101


State 68

    9 fpar_def: "ref" T_id td ':' • fpar_type

    "char"  shift, and go to state 42
    "int"   shift, and go to state 43

    data_type  go to state 70
    fpar_type  go to state 102


State 69

   12 td: td ',' T_id •

    $default  reduce using rule 12 (td)


State 70

   20 fpar_type: data_type • '[' ']' cd
   21          | data_type • cd

    '['  shift, and go to state 103

    '['       [reduce using rule 15 (cd)]
    $default  reduce using rule 15 (cd)

    cd  go to state 104


State 71

   10 fpar_def: T_id td ':' fpar_type •

    $default  reduce using rule 10 (fpar_def)


State 72

    5 header: "fun" T_id '(' fd ')' ':' ret_type •

    $default  reduce using rule 5 (header)


State 73

   17 type: data_type • cd

    $default  reduce using rule 15 (cd)

    cd  go to state 105


State 74

   24 var_def: "var" T_id td ':' type • ';'

    ';'  shift, and go to state 106


State 75

   57 cond: "not" cond •
   58     | cond • "or" cond
   59     | cond • "and" cond

    "and"  shift, and go to state 91
    "or"   shift, and go to state 92

    "and"     [reduce using rule 57 (cond)]
    "or"      [reduce using rule 57 (cond)]
    $default  reduce using rule 57 (cond)


State 76

   47 expr: '(' expr • ')'
   51     | expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   60 cond: expr • '=' expr
   61     | expr • '#' expr
   62     | expr • '<' expr
   63     | expr • '>' expr
   64     | expr • "<=" expr
   65     | expr • ">=" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    ')'    shift, and go to state 107
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '#'    shift, and go to state 86
    '='    shift, and go to state 87
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 77

   56 cond: '(' cond • ')'
   58     | cond • "or" cond
   59     | cond • "and" cond

    "and"  shift, and go to state 91
    "or"   shift, and go to state 92
    ')'    shift, and go to state 108


State 78

   49 expr: '+' expr •
   51     | expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '*'    shift, and go to state 90

    "div"     [reduce using rule 49 (expr)]
    "mod"     [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 79

   50 expr: '-' expr •
   51     | expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '*'    shift, and go to state 90

    "div"     [reduce using rule 50 (expr)]
    "mod"     [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 80

   54 expr: expr "div" • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 109


State 81

   55 expr: expr "mod" • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 110


State 82

   64 cond: expr "<=" • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 111


State 83

   65 cond: expr ">=" • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 112


State 84

   62 cond: expr '<' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 113


State 85

   63 cond: expr '>' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 114


State 86

   61 cond: expr '#' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 115


State 87

   60 cond: expr '=' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 116


State 88

   51 expr: expr '+' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 117


State 89

   52 expr: expr '-' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 118


State 90

   53 expr: expr '*' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 119


State 91

   59 cond: cond "and" • cond

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 58
    cond       go to state 120


State 92

   58 cond: cond "or" • cond

    "not"           shift, and go to state 50
    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 53
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 58
    cond       go to state 121


State 93

   29 stmt: "if" cond "then" • stmt "else" stmt
   30     | "if" cond "then" • stmt

    "if"            shift, and go to state 28
    "return"        shift, and go to state 29
    "while"         shift, and go to state 30
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '{'             shift, and go to state 10
    ';'             shift, and go to state 34

    stmt       go to state 122
    block      go to state 36
    func_call  go to state 37
    l_value    go to state 38


State 94

   47 expr: '(' expr • ')'
   51     | expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    ')'    shift, and go to state 107
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 95

   32 stmt: "return" expr ';' •

    $default  reduce using rule 32 (stmt)


State 96

   31 stmt: "while" cond "do" • stmt

    "if"            shift, and go to state 28
    "return"        shift, and go to state 29
    "while"         shift, and go to state 30
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '{'             shift, and go to state 10
    ';'             shift, and go to state 34

    stmt       go to state 123
    block      go to state 36
    func_call  go to state 37
    l_value    go to state 38


State 97

   40 func_call: T_id '(' ')' •

    $default  reduce using rule 40 (func_call)


State 98

   38 exprc: exprc • ',' expr
   39 func_call: T_id '(' exprc • ')'

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 99

   37 exprc: expr •
   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 37 (exprc)


State 100

   26 stmt: l_value "<-" expr • ';'
   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    ';'    shift, and go to state 126
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 101

   43 l_value: l_value '[' expr • ']'
   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    ']'    shift, and go to state 127
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90


State 102

    9 fpar_def: "ref" T_id td ':' fpar_type •

    $default  reduce using rule 9 (fpar_def)


State 103

   20 fpar_type: data_type '[' • ']' cd

    ']'  shift, and go to state 128


State 104

   16 cd: cd • '[' T_int_const ']'
   21 fpar_type: data_type cd •

    '['  shift, and go to state 129

    $default  reduce using rule 21 (fpar_type)


State 105

   16 cd: cd • '[' T_int_const ']'
   17 type: data_type cd •

    '['  shift, and go to state 129

    $default  reduce using rule 17 (type)


State 106

   24 var_def: "var" T_id td ':' type ';' •

    $default  reduce using rule 24 (var_def)


State 107

   47 expr: '(' expr ')' •

    $default  reduce using rule 47 (expr)


State 108

   56 cond: '(' cond ')' •

    $default  reduce using rule 56 (cond)


State 109

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   54     | expr "div" expr •
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    "div"     [reduce using rule 54 (expr)]
    "mod"     [reduce using rule 54 (expr)]
    '+'       [reduce using rule 54 (expr)]
    '-'       [reduce using rule 54 (expr)]
    '*'       [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 110

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   55     | expr "mod" expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    "div"     [reduce using rule 55 (expr)]
    "mod"     [reduce using rule 55 (expr)]
    '+'       [reduce using rule 55 (expr)]
    '-'       [reduce using rule 55 (expr)]
    '*'       [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


State 111

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   64 cond: expr "<=" expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 64 (cond)


State 112

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   65 cond: expr ">=" expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 65 (cond)


State 113

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   62 cond: expr '<' expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 62 (cond)


State 114

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   63 cond: expr '>' expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 63 (cond)


State 115

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   61 cond: expr '#' expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 61 (cond)


State 116

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr
   60 cond: expr '=' expr •

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 60 (cond)


State 117

   51 expr: expr • '+' expr
   51     | expr '+' expr •
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '*'    shift, and go to state 90

    "div"     [reduce using rule 51 (expr)]
    "mod"     [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 118

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   52     | expr '-' expr •
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '*'    shift, and go to state 90

    "div"     [reduce using rule 52 (expr)]
    "mod"     [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


State 119

   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   53     | expr '*' expr •
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81

    "div"     [reduce using rule 53 (expr)]
    "mod"     [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 120

   58 cond: cond • "or" cond
   59     | cond • "and" cond
   59     | cond "and" cond •

    "and"  shift, and go to state 91
    "or"   shift, and go to state 92

    "and"     [reduce using rule 59 (cond)]
    "or"      [reduce using rule 59 (cond)]
    $default  reduce using rule 59 (cond)


State 121

   58 cond: cond • "or" cond
   58     | cond "or" cond •
   59     | cond • "and" cond

    "and"  shift, and go to state 91
    "or"   shift, and go to state 92

    "and"     [reduce using rule 58 (cond)]
    "or"      [reduce using rule 58 (cond)]
    $default  reduce using rule 58 (cond)


State 122

   29 stmt: "if" cond "then" stmt • "else" stmt
   30     | "if" cond "then" stmt •

    "else"  shift, and go to state 130

    "else"    [reduce using rule 30 (stmt)]
    $default  reduce using rule 30 (stmt)


State 123

   31 stmt: "while" cond "do" stmt •

    $default  reduce using rule 31 (stmt)


State 124

   39 func_call: T_id '(' exprc ')' •

    $default  reduce using rule 39 (func_call)


State 125

   38 exprc: exprc ',' • expr

    T_int_const     shift, and go to state 51
    T_char_const    shift, and go to state 52
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '('             shift, and go to state 60
    '+'             shift, and go to state 54
    '-'             shift, and go to state 55

    func_call  go to state 56
    l_value    go to state 57
    expr       go to state 131


State 126

   26 stmt: l_value "<-" expr ';' •

    $default  reduce using rule 26 (stmt)


State 127

   43 l_value: l_value '[' expr ']' •

    $default  reduce using rule 43 (l_value)


State 128

   20 fpar_type: data_type '[' ']' • cd

    $default  reduce using rule 15 (cd)

    cd  go to state 132


State 129

   16 cd: cd '[' • T_int_const ']'

    T_int_const  shift, and go to state 133


State 130

   29 stmt: "if" cond "then" stmt "else" • stmt

    "if"            shift, and go to state 28
    "return"        shift, and go to state 29
    "while"         shift, and go to state 30
    T_id            shift, and go to state 31
    T_string_const  shift, and go to state 32
    '{'             shift, and go to state 10
    ';'             shift, and go to state 34

    stmt       go to state 134
    block      go to state 36
    func_call  go to state 37
    l_value    go to state 38


State 131

   38 exprc: exprc ',' expr •
   51 expr: expr • '+' expr
   52     | expr • '-' expr
   53     | expr • '*' expr
   54     | expr • "div" expr
   55     | expr • "mod" expr

    "div"  shift, and go to state 80
    "mod"  shift, and go to state 81
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90

    $default  reduce using rule 38 (exprc)


State 132

   16 cd: cd • '[' T_int_const ']'
   20 fpar_type: data_type '[' ']' cd •

    '['  shift, and go to state 129

    $default  reduce using rule 20 (fpar_type)


State 133

   16 cd: cd '[' T_int_const • ']'

    ']'  shift, and go to state 135


State 134

   29 stmt: "if" cond "then" stmt "else" stmt •

    $default  reduce using rule 29 (stmt)


State 135

   16 cd: cd '[' T_int_const ']' •

    $default  reduce using rule 16 (cd)
