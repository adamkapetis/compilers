Terminals which are not used

   "eof"
   T_divider
   T_operator
   '/'
   '%'


State 71 conflicts: 2 shift/reduce
State 72 conflicts: 2 shift/reduce
State 73 conflicts: 2 shift/reduce
State 107 conflicts: 5 shift/reduce
State 108 conflicts: 5 shift/reduce
State 111 conflicts: 2 shift/reduce
State 112 conflicts: 2 shift/reduce
State 113 conflicts: 2 shift/reduce
State 118 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 ld: /* empty */
    3   | local_def ld

    4 func_def: header ld block

    5 fd: /* empty */
    6   | ';' fpar_def fd

    7 header: "fun" T_id '(' fpar_def fd ')' ':' ret_type

    8 td: /* empty */
    9   | ',' T_id td

   10 fpar_def: "ref" T_id td ':' fpar_type
   11         | T_id td ':' fpar_type

   12 data_type: "int"
   13          | "char"

   14 cd: /* empty */
   15   | '[' T_int_const ']' cd

   16 type: data_type cd

   17 ret_type: data_type
   18         | "nothing"

   19 fpard: /* empty */
   20      | '[' T_int_const ']' fpard

   21 fpar_type: data_type '[' ']' fpard
   22          | data_type fpard

   23 local_def: func_def
   24          | func_decl
   25          | var_def

   26 func_decl: header ';'

   27 var_def: "var" T_id td ':' type ';'

   28 stmt: ';'
   29     | l_value "<-" expr ';'
   30     | block
   31     | func_call ';'
   32     | "if" cond "then" stmt "else" stmt
   33     | "if" cond "then" stmt
   34     | "while" cond "do" stmt
   35     | "return" expr ';'
   36     | "return" ';'

   37 stmtd: /* empty */
   38      | stmt stmtd

   39 block: '{' stmtd '}'

   40 exprc: /* empty */
   41      | ',' expr exprc

   42 func_call: T_id '(' expr exprc ')'
   43          | T_id '(' ')'

   44 l_value: T_id
   45        | T_string_const
   46        | l_value '[' expr ']'

   47 expr: T_int_const
   48     | T_char_const
   49     | l_value
   50     | '(' expr ')'
   51     | func_call
   52     | '+' expr
   53     | '-' expr
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr "div" expr
   58     | expr "mod" expr

   59 cond: '(' cond ')'
   60     | "not" cond
   61     | cond "or" cond
   62     | cond "and" cond
   63     | expr '=' expr
   64     | expr '#' expr
   65     | expr '<' expr
   66     | expr '>' expr
   67     | expr "<=" expr
   68     | expr ">=" expr


Terminals, with rules where they appear

$end (0) 0
'#' (35) 64
'%' (37)
'(' (40) 7 42 43 50 59
')' (41) 7 42 43 50 59
'*' (42) 56
'+' (43) 52 54
',' (44) 9 41
'-' (45) 53 55
'/' (47)
':' (58) 7 10 11 27
';' (59) 6 26 27 28 29 31 35 36
'<' (60) 65
'=' (61) 63
'>' (62) 66
'[' (91) 15 20 21 46
']' (93) 15 20 21 46
'{' (123) 39
'}' (125) 39
error (256)
"eof" (258)
"and" (259) 62
"char" (260) 13
"div" (261) 57
"do" (262) 34
"else" (263) 32
"fun" (264) 7
"if" (265) 32 33
"int" (266) 12
"mod" (267) 58
"not" (268) 60
"nothing" (269) 18
"or" (270) 61
"ref" (271) 10
"return" (272) 35 36
"then" (273) 32 33
"var" (274) 27
"while" (275) 34
"<=" (276) 67
">=" (277) 68
"<-" (278) 29
T_int_const (279) 15 20 47
T_char_const (280) 48
T_id (281) 7 9 10 11 27 42 43 44
T_string_const (282) 45
T_divider (283)
T_operator (284)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
ld (50)
    on left: 2 3, on right: 3 4
func_def (51)
    on left: 4, on right: 1 23
fd (52)
    on left: 5 6, on right: 6 7
header (53)
    on left: 7, on right: 4 26
td (54)
    on left: 8 9, on right: 9 10 11 27
fpar_def (55)
    on left: 10 11, on right: 6 7
data_type (56)
    on left: 12 13, on right: 16 17 21 22
cd (57)
    on left: 14 15, on right: 15 16
type (58)
    on left: 16, on right: 27
ret_type (59)
    on left: 17 18, on right: 7
fpard (60)
    on left: 19 20, on right: 20 21 22
fpar_type (61)
    on left: 21 22, on right: 10 11
local_def (62)
    on left: 23 24 25, on right: 3
func_decl (63)
    on left: 26, on right: 24
var_def (64)
    on left: 27, on right: 25
stmt (65)
    on left: 28 29 30 31 32 33 34 35 36, on right: 32 33 34 38
stmtd (66)
    on left: 37 38, on right: 38 39
block (67)
    on left: 39, on right: 4 30
exprc (68)
    on left: 40 41, on right: 41 42
func_call (69)
    on left: 42 43, on right: 31 51
l_value (70)
    on left: 44 45 46, on right: 29 46 49
expr (71)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58, on right: 29 35 41
    42 46 50 52 53 54 55 56 57 58 63 64 65 66 67 68
cond (72)
    on left: 59 60 61 62 63 64 65 66 67 68, on right: 32 33 34 59 60
    61 62


state 0

    0 $accept: . program $end

    "fun"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3
    header    go to state 4


state 1

    7 header: "fun" . T_id '(' fpar_def fd ')' ':' ret_type

    T_id  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


state 4

    4 func_def: header . ld block

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7

    $default  reduce using rule 2 (ld)

    ld         go to state 8
    func_def   go to state 9
    header     go to state 10
    local_def  go to state 11
    func_decl  go to state 12
    var_def    go to state 13


state 5

    7 header: "fun" T_id . '(' fpar_def fd ')' ':' ret_type

    '('  shift, and go to state 14


state 6

    0 $accept: program $end .

    $default  accept


state 7

   27 var_def: "var" . T_id td ':' type ';'

    T_id  shift, and go to state 15


state 8

    4 func_def: header ld . block

    '{'  shift, and go to state 16

    block  go to state 17


state 9

   23 local_def: func_def .

    $default  reduce using rule 23 (local_def)


state 10

    4 func_def: header . ld block
   26 func_decl: header . ';'

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7
    ';'    shift, and go to state 18

    $default  reduce using rule 2 (ld)

    ld         go to state 8
    func_def   go to state 9
    header     go to state 10
    local_def  go to state 11
    func_decl  go to state 12
    var_def    go to state 13


state 11

    3 ld: local_def . ld

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7

    $default  reduce using rule 2 (ld)

    ld         go to state 19
    func_def   go to state 9
    header     go to state 10
    local_def  go to state 11
    func_decl  go to state 12
    var_def    go to state 13


state 12

   24 local_def: func_decl .

    $default  reduce using rule 24 (local_def)


state 13

   25 local_def: var_def .

    $default  reduce using rule 25 (local_def)


state 14

    7 header: "fun" T_id '(' . fpar_def fd ')' ':' ret_type

    "ref"  shift, and go to state 20
    T_id   shift, and go to state 21

    fpar_def  go to state 22


state 15

   27 var_def: "var" T_id . td ':' type ';'

    ','  shift, and go to state 23

    $default  reduce using rule 8 (td)

    td  go to state 24


state 16

   39 block: '{' . stmtd '}'

    "if"            shift, and go to state 25
    "return"        shift, and go to state 26
    "while"         shift, and go to state 27
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    ';'             shift, and go to state 30
    '{'             shift, and go to state 16

    $default  reduce using rule 37 (stmtd)

    stmt       go to state 31
    stmtd      go to state 32
    block      go to state 33
    func_call  go to state 34
    l_value    go to state 35


state 17

    4 func_def: header ld block .

    $default  reduce using rule 4 (func_def)


state 18

   26 func_decl: header ';' .

    $default  reduce using rule 26 (func_decl)


state 19

    3 ld: local_def ld .

    $default  reduce using rule 3 (ld)


state 20

   10 fpar_def: "ref" . T_id td ':' fpar_type

    T_id  shift, and go to state 36


state 21

   11 fpar_def: T_id . td ':' fpar_type

    ','  shift, and go to state 23

    $default  reduce using rule 8 (td)

    td  go to state 37


state 22

    7 header: "fun" T_id '(' fpar_def . fd ')' ':' ret_type

    ';'  shift, and go to state 38

    $default  reduce using rule 5 (fd)

    fd  go to state 39


state 23

    9 td: ',' . T_id td

    T_id  shift, and go to state 40


state 24

   27 var_def: "var" T_id td . ':' type ';'

    ':'  shift, and go to state 41


state 25

   32 stmt: "if" . cond "then" stmt "else" stmt
   33     | "if" . cond "then" stmt

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 50
    cond       go to state 51


state 26

   35 stmt: "return" . expr ';'
   36     | "return" . ';'

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    ';'             shift, and go to state 52
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 54


state 27

   34 stmt: "while" . cond "do" stmt

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 50
    cond       go to state 55


state 28

   42 func_call: T_id . '(' expr exprc ')'
   43          | T_id . '(' ')'
   44 l_value: T_id .

    '('  shift, and go to state 56

    $default  reduce using rule 44 (l_value)


state 29

   45 l_value: T_string_const .

    $default  reduce using rule 45 (l_value)


state 30

   28 stmt: ';' .

    $default  reduce using rule 28 (stmt)


state 31

   38 stmtd: stmt . stmtd

    "if"            shift, and go to state 25
    "return"        shift, and go to state 26
    "while"         shift, and go to state 27
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    ';'             shift, and go to state 30
    '{'             shift, and go to state 16

    $default  reduce using rule 37 (stmtd)

    stmt       go to state 31
    stmtd      go to state 57
    block      go to state 33
    func_call  go to state 34
    l_value    go to state 35


state 32

   39 block: '{' stmtd . '}'

    '}'  shift, and go to state 58


state 33

   30 stmt: block .

    $default  reduce using rule 30 (stmt)


state 34

   31 stmt: func_call . ';'

    ';'  shift, and go to state 59


state 35

   29 stmt: l_value . "<-" expr ';'
   46 l_value: l_value . '[' expr ']'

    "<-"  shift, and go to state 60
    '['   shift, and go to state 61


state 36

   10 fpar_def: "ref" T_id . td ':' fpar_type

    ','  shift, and go to state 23

    $default  reduce using rule 8 (td)

    td  go to state 62


state 37

   11 fpar_def: T_id td . ':' fpar_type

    ':'  shift, and go to state 63


state 38

    6 fd: ';' . fpar_def fd

    "ref"  shift, and go to state 20
    T_id   shift, and go to state 21

    fpar_def  go to state 64


state 39

    7 header: "fun" T_id '(' fpar_def fd . ')' ':' ret_type

    ')'  shift, and go to state 65


state 40

    9 td: ',' T_id . td

    ','  shift, and go to state 23

    $default  reduce using rule 8 (td)

    td  go to state 66


state 41

   27 var_def: "var" T_id td ':' . type ';'

    "char"  shift, and go to state 67
    "int"   shift, and go to state 68

    data_type  go to state 69
    type       go to state 70


state 42

   60 cond: "not" . cond

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 50
    cond       go to state 71


state 43

   47 expr: T_int_const .

    $default  reduce using rule 47 (expr)


state 44

   48 expr: T_char_const .

    $default  reduce using rule 48 (expr)


state 45

   52 expr: '+' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 72


state 46

   53 expr: '-' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 73


state 47

   50 expr: '(' . expr ')'
   59 cond: '(' . cond ')'

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 74
    cond       go to state 75


state 48

   51 expr: func_call .

    $default  reduce using rule 51 (expr)


state 49

   46 l_value: l_value . '[' expr ']'
   49 expr: l_value .

    '['  shift, and go to state 61

    $default  reduce using rule 49 (expr)


state 50

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   63 cond: expr . '=' expr
   64     | expr . '#' expr
   65     | expr . '<' expr
   66     | expr . '>' expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    "<="   shift, and go to state 78
    ">="   shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    '='    shift, and go to state 83
    '#'    shift, and go to state 84
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86


state 51

   32 stmt: "if" cond . "then" stmt "else" stmt
   33     | "if" cond . "then" stmt
   61 cond: cond . "or" cond
   62     | cond . "and" cond

    "and"   shift, and go to state 87
    "or"    shift, and go to state 88
    "then"  shift, and go to state 89


state 52

   36 stmt: "return" ';' .

    $default  reduce using rule 36 (stmt)


state 53

   50 expr: '(' . expr ')'

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 90


state 54

   35 stmt: "return" expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ';'    shift, and go to state 91


state 55

   34 stmt: "while" cond . "do" stmt
   61 cond: cond . "or" cond
   62     | cond . "and" cond

    "and"  shift, and go to state 87
    "do"   shift, and go to state 92
    "or"   shift, and go to state 88


state 56

   42 func_call: T_id '(' . expr exprc ')'
   43          | T_id '(' . ')'

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53
    ')'             shift, and go to state 93

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 94


state 57

   38 stmtd: stmt stmtd .

    $default  reduce using rule 38 (stmtd)


state 58

   39 block: '{' stmtd '}' .

    $default  reduce using rule 39 (block)


state 59

   31 stmt: func_call ';' .

    $default  reduce using rule 31 (stmt)


state 60

   29 stmt: l_value "<-" . expr ';'

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 95


state 61

   46 l_value: l_value '[' . expr ']'

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 96


state 62

   10 fpar_def: "ref" T_id td . ':' fpar_type

    ':'  shift, and go to state 97


state 63

   11 fpar_def: T_id td ':' . fpar_type

    "char"  shift, and go to state 67
    "int"   shift, and go to state 68

    data_type  go to state 98
    fpar_type  go to state 99


state 64

    6 fd: ';' fpar_def . fd

    ';'  shift, and go to state 38

    $default  reduce using rule 5 (fd)

    fd  go to state 100


state 65

    7 header: "fun" T_id '(' fpar_def fd ')' . ':' ret_type

    ':'  shift, and go to state 101


state 66

    9 td: ',' T_id td .

    $default  reduce using rule 9 (td)


state 67

   13 data_type: "char" .

    $default  reduce using rule 13 (data_type)


state 68

   12 data_type: "int" .

    $default  reduce using rule 12 (data_type)


state 69

   16 type: data_type . cd

    '['  shift, and go to state 102

    $default  reduce using rule 14 (cd)

    cd  go to state 103


state 70

   27 var_def: "var" T_id td ':' type . ';'

    ';'  shift, and go to state 104


state 71

   60 cond: "not" cond .
   61     | cond . "or" cond
   62     | cond . "and" cond

    "and"  shift, and go to state 87
    "or"   shift, and go to state 88

    "and"     [reduce using rule 60 (cond)]
    "or"      [reduce using rule 60 (cond)]
    $default  reduce using rule 60 (cond)


state 72

   52 expr: '+' expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '*'    shift, and go to state 82

    "div"     [reduce using rule 52 (expr)]
    "mod"     [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


state 73

   53 expr: '-' expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '*'    shift, and go to state 82

    "div"     [reduce using rule 53 (expr)]
    "mod"     [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


state 74

   50 expr: '(' expr . ')'
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   63 cond: expr . '=' expr
   64     | expr . '#' expr
   65     | expr . '<' expr
   66     | expr . '>' expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    "<="   shift, and go to state 78
    ">="   shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ')'    shift, and go to state 105
    '='    shift, and go to state 83
    '#'    shift, and go to state 84
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86


state 75

   59 cond: '(' cond . ')'
   61     | cond . "or" cond
   62     | cond . "and" cond

    "and"  shift, and go to state 87
    "or"   shift, and go to state 88
    ')'    shift, and go to state 106


state 76

   57 expr: expr "div" . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 107


state 77

   58 expr: expr "mod" . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 108


state 78

   67 cond: expr "<=" . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 109


state 79

   68 cond: expr ">=" . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 110


state 80

   54 expr: expr '+' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 111


state 81

   55 expr: expr '-' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 112


state 82

   56 expr: expr '*' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 113


state 83

   63 cond: expr '=' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 114


state 84

   64 cond: expr '#' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 115


state 85

   65 cond: expr '<' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 116


state 86

   66 cond: expr '>' . expr

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 117


state 87

   62 cond: cond "and" . cond

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 50
    cond       go to state 118


state 88

   61 cond: cond "or" . cond

    "not"           shift, and go to state 42
    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 47

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 50
    cond       go to state 119


state 89

   32 stmt: "if" cond "then" . stmt "else" stmt
   33     | "if" cond "then" . stmt

    "if"            shift, and go to state 25
    "return"        shift, and go to state 26
    "while"         shift, and go to state 27
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    ';'             shift, and go to state 30
    '{'             shift, and go to state 16

    stmt       go to state 120
    block      go to state 33
    func_call  go to state 34
    l_value    go to state 35


state 90

   50 expr: '(' expr . ')'
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ')'    shift, and go to state 105


state 91

   35 stmt: "return" expr ';' .

    $default  reduce using rule 35 (stmt)


state 92

   34 stmt: "while" cond "do" . stmt

    "if"            shift, and go to state 25
    "return"        shift, and go to state 26
    "while"         shift, and go to state 27
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    ';'             shift, and go to state 30
    '{'             shift, and go to state 16

    stmt       go to state 121
    block      go to state 33
    func_call  go to state 34
    l_value    go to state 35


state 93

   43 func_call: T_id '(' ')' .

    $default  reduce using rule 43 (func_call)


state 94

   42 func_call: T_id '(' expr . exprc ')'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ','    shift, and go to state 122

    $default  reduce using rule 40 (exprc)

    exprc  go to state 123


state 95

   29 stmt: l_value "<-" expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ';'    shift, and go to state 124


state 96

   46 l_value: l_value '[' expr . ']'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ']'    shift, and go to state 125


state 97

   10 fpar_def: "ref" T_id td ':' . fpar_type

    "char"  shift, and go to state 67
    "int"   shift, and go to state 68

    data_type  go to state 98
    fpar_type  go to state 126


state 98

   21 fpar_type: data_type . '[' ']' fpard
   22          | data_type . fpard

    '['  shift, and go to state 127

    $default  reduce using rule 19 (fpard)

    fpard  go to state 128


state 99

   11 fpar_def: T_id td ':' fpar_type .

    $default  reduce using rule 11 (fpar_def)


state 100

    6 fd: ';' fpar_def fd .

    $default  reduce using rule 6 (fd)


state 101

    7 header: "fun" T_id '(' fpar_def fd ')' ':' . ret_type

    "char"     shift, and go to state 67
    "int"      shift, and go to state 68
    "nothing"  shift, and go to state 129

    data_type  go to state 130
    ret_type   go to state 131


state 102

   15 cd: '[' . T_int_const ']' cd

    T_int_const  shift, and go to state 132


state 103

   16 type: data_type cd .

    $default  reduce using rule 16 (type)


state 104

   27 var_def: "var" T_id td ':' type ';' .

    $default  reduce using rule 27 (var_def)


state 105

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


state 106

   59 cond: '(' cond ')' .

    $default  reduce using rule 59 (cond)


state 107

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   57     | expr "div" expr .
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    "div"     [reduce using rule 57 (expr)]
    "mod"     [reduce using rule 57 (expr)]
    '+'       [reduce using rule 57 (expr)]
    '-'       [reduce using rule 57 (expr)]
    '*'       [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


state 108

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   58     | expr "mod" expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    "div"     [reduce using rule 58 (expr)]
    "mod"     [reduce using rule 58 (expr)]
    '+'       [reduce using rule 58 (expr)]
    '-'       [reduce using rule 58 (expr)]
    '*'       [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


state 109

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   67 cond: expr "<=" expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 67 (cond)


state 110

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   68 cond: expr ">=" expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 68 (cond)


state 111

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '*'    shift, and go to state 82

    "div"     [reduce using rule 54 (expr)]
    "mod"     [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


state 112

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '*'    shift, and go to state 82

    "div"     [reduce using rule 55 (expr)]
    "mod"     [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


state 113

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77

    "div"     [reduce using rule 56 (expr)]
    "mod"     [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


state 114

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   63 cond: expr '=' expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 63 (cond)


state 115

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   64 cond: expr '#' expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 64 (cond)


state 116

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   65 cond: expr '<' expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 65 (cond)


state 117

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr
   66 cond: expr '>' expr .

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82

    $default  reduce using rule 66 (cond)


state 118

   61 cond: cond . "or" cond
   62     | cond . "and" cond
   62     | cond "and" cond .

    "and"  shift, and go to state 87
    "or"   shift, and go to state 88

    "and"     [reduce using rule 62 (cond)]
    "or"      [reduce using rule 62 (cond)]
    $default  reduce using rule 62 (cond)


state 119

   61 cond: cond . "or" cond
   61     | cond "or" cond .
   62     | cond . "and" cond

    "and"  shift, and go to state 87
    "or"   shift, and go to state 88

    "and"     [reduce using rule 61 (cond)]
    "or"      [reduce using rule 61 (cond)]
    $default  reduce using rule 61 (cond)


state 120

   32 stmt: "if" cond "then" stmt . "else" stmt
   33     | "if" cond "then" stmt .

    "else"  shift, and go to state 133

    "else"    [reduce using rule 33 (stmt)]
    $default  reduce using rule 33 (stmt)


state 121

   34 stmt: "while" cond "do" stmt .

    $default  reduce using rule 34 (stmt)


state 122

   41 exprc: ',' . expr exprc

    T_int_const     shift, and go to state 43
    T_char_const    shift, and go to state 44
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    '+'             shift, and go to state 45
    '-'             shift, and go to state 46
    '('             shift, and go to state 53

    func_call  go to state 48
    l_value    go to state 49
    expr       go to state 134


state 123

   42 func_call: T_id '(' expr exprc . ')'

    ')'  shift, and go to state 135


state 124

   29 stmt: l_value "<-" expr ';' .

    $default  reduce using rule 29 (stmt)


state 125

   46 l_value: l_value '[' expr ']' .

    $default  reduce using rule 46 (l_value)


state 126

   10 fpar_def: "ref" T_id td ':' fpar_type .

    $default  reduce using rule 10 (fpar_def)


state 127

   20 fpard: '[' . T_int_const ']' fpard
   21 fpar_type: data_type '[' . ']' fpard

    T_int_const  shift, and go to state 136
    ']'          shift, and go to state 137


state 128

   22 fpar_type: data_type fpard .

    $default  reduce using rule 22 (fpar_type)


state 129

   18 ret_type: "nothing" .

    $default  reduce using rule 18 (ret_type)


state 130

   17 ret_type: data_type .

    $default  reduce using rule 17 (ret_type)


state 131

    7 header: "fun" T_id '(' fpar_def fd ')' ':' ret_type .

    $default  reduce using rule 7 (header)


state 132

   15 cd: '[' T_int_const . ']' cd

    ']'  shift, and go to state 138


state 133

   32 stmt: "if" cond "then" stmt "else" . stmt

    "if"            shift, and go to state 25
    "return"        shift, and go to state 26
    "while"         shift, and go to state 27
    T_id            shift, and go to state 28
    T_string_const  shift, and go to state 29
    ';'             shift, and go to state 30
    '{'             shift, and go to state 16

    stmt       go to state 139
    block      go to state 33
    func_call  go to state 34
    l_value    go to state 35


state 134

   41 exprc: ',' expr . exprc
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . "div" expr
   58     | expr . "mod" expr

    "div"  shift, and go to state 76
    "mod"  shift, and go to state 77
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    ','    shift, and go to state 122

    $default  reduce using rule 40 (exprc)

    exprc  go to state 140


state 135

   42 func_call: T_id '(' expr exprc ')' .

    $default  reduce using rule 42 (func_call)


state 136

   20 fpard: '[' T_int_const . ']' fpard

    ']'  shift, and go to state 141


state 137

   21 fpar_type: data_type '[' ']' . fpard

    '['  shift, and go to state 142

    $default  reduce using rule 19 (fpard)

    fpard  go to state 143


state 138

   15 cd: '[' T_int_const ']' . cd

    '['  shift, and go to state 102

    $default  reduce using rule 14 (cd)

    cd  go to state 144


state 139

   32 stmt: "if" cond "then" stmt "else" stmt .

    $default  reduce using rule 32 (stmt)


state 140

   41 exprc: ',' expr exprc .

    $default  reduce using rule 41 (exprc)


state 141

   20 fpard: '[' T_int_const ']' . fpard

    '['  shift, and go to state 142

    $default  reduce using rule 19 (fpard)

    fpard  go to state 145


state 142

   20 fpard: '[' . T_int_const ']' fpard

    T_int_const  shift, and go to state 136


state 143

   21 fpar_type: data_type '[' ']' fpard .

    $default  reduce using rule 21 (fpar_type)


state 144

   15 cd: '[' T_int_const ']' cd .

    $default  reduce using rule 15 (cd)


state 145

   20 fpard: '[' T_int_const ']' fpard .

    $default  reduce using rule 20 (fpard)
